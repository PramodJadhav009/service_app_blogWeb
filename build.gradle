buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
        sonarqubeVersion = '2.7'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://repo.spring.io/milestone"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven{
         url "https://maven.atlassian.com/content/repositories/atlassian-public/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.21"
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarqubeVersion}")
    }
}

apply plugin: 'org.sonarqube'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'net.ltgt.apt'

group = 'com.blog'
version = '1.0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "https://repo.spring.io/milestone"
    }
}

ext {
    set('springCloudVersion', 'Greenwich.RC2')
}

dependencies {
    // Removing logback dependencies since we will be using log4j2.
    [
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-aop",
            "org.springframework.boot:spring-boot-starter-validation:2.1.4.RELEASE",
            "org.springframework.cloud:spring-cloud-starter-openfeign",
            "org.springframework.boot:spring-boot-starter-data-redis",
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.boot:spring-boot-starter-actuator",
            "org.springframework.cloud:spring-cloud-starter-sleuth"
    ].each { dep ->
        implementation(dep) {
            exclude module: "spring-boot-starter-logging"
            exclude module: "logback-classic"
        }
    }

    // Removing android-json since we are using json directly.
    [
            "org.springframework.boot:spring-boot-starter-test",
    ].each { dep ->
        testCompile(dep) {
            exclude module: "spring-boot-starter-logging"
            exclude module: "logback-classic"
            exclude group: "com.vaadin.external.google", module: "android-json"
        }
    }

    // Removing the swagger annotations and models has an issue on version 2.9.20
    // when the parameter is the type of Integer. Removing the dependency version
    // 2.9.20 and including manually the version 2.9.22
    [
            "io.springfox:springfox-swagger2:2.9.2"
    ].each { dep ->
        implementation(dep) {
            exclude group: "io.swagger", module: "swagger-annotations"
            exclude group: "io.swagger", module: "swagger-models"
        }
    }


    compile group: 'io.github.openfeign', name: 'feign-annotation-error-decoder', version: '1.1.2'
    // https://mvnrepository.com/artifact/io.github.openfeign/feign-okhttp
    compile group: 'io.github.openfeign', name: 'feign-okhttp', version: '10.2.3'

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.8'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.8'

    implementation('org.springframework.boot:spring-boot-starter-log4j2')
    compile group: 'io.github.openfeign', name: 'feign-annotation-error-decoder', version: '1.1.2'
    compile group: 'io.github.openfeign', name: 'feign-jackson', version: '9.3.1'
    compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.22'
    compile group: 'io.swagger', name: 'swagger-models', version: '1.5.22'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.7'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    // https://mvnrepository.com/artifact/com.lmax/disruptor
    compile group: 'com.lmax', name: 'disruptor', version: '3.4.2'
    compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxrs', version: '2.7.14'
    compile group: 'commons-io', name: 'commons-io', version: '2.0.1'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'org.json', name: 'json', version: '20180813'
    
    // https://mvnrepository.com/artifact/javax.inject/javax.inject
    compile group: 'javax.inject', name: 'javax.inject', version: '1'

    //projectlombok
    compileOnly 'org.projectlombok:lombok:1.18.8'
    testCompileOnly 'org.projectlombok:lombok:1.18.8'

    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.8'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.tngtech.archunit', name: 'archunit-junit4', version: '0.10.2'
    testCompile 'com.github.tomakehurst:wiremock-jre8:2.23.2'

    compile group: 'org.mapstruct', name: 'mapstruct', version: '1.3.0.Final'
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.3.0.Final'

    compile group: 'org.springframework.security', name: 'spring-security-config', version: '3.2.0.RELEASE'

    compile group: 'io.micrometer', name: 'micrometer-registry-prometheus'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.10'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
	

	compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.705'
	compile group: 'com.amazonaws', name: 'aws-java-sdk-core', version: '1.11.705'
	compile group: 'com.amazonaws', name: 'aws-java-sdk-cognitoidentity', version: '1.11.705'
	compile group: 'com.amazonaws', name: 'aws-java-sdk-cognitoidp', version: '1.11.705'
	compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.656'
	compile group: 'com.github.derjust', name: 'spring-data-dynamodb', version: '5.1.0'
	
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/jacocoXml.xml")
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['com/lifescan/app/consumerweb/model/**',
                                        'com/lifescan/app/consumerweb/networking/model/**',
                                        'com/lifescan/app/consumerweb/enums/**',
                                        'com/lifescan/app/consumerweb/constants',
                                        'com/lifescan/app/consumerweb/util/DMSServiceResult.class',
                                        'com/lifescan/app/consumerweb/util/DMSServiceError.class',
                                        'com/lifescan/app/consumerweb/util/RestUtil.class',
                                        'com/lifescan/app/consumerweb/networking/handler/**'])
        })
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.68
            }
        }
        afterEvaluate {
            classDirectories = files(classDirectories.files.collect {
                fileTree(dir: it, exclude: ['com/lifescan/app/consumerweb/model/**',
                                            'com/lifescan/app/consumerweb/networking/model/**',
                                            'com/lifescan/app/consumerweb/enums/**',
                                            'com/lifescan/app/consumerweb/constants',
                                            'com/lifescan/app/consumerweb/util/DMSServiceResult.class',
                                            'com/lifescan/app/consumerweb/util/DMSServiceError.class',
                                            'com/lifescan/app/consumerweb/util/RestUtil.class',
                                            'com/lifescan/app/consumerweb/networking/handler/**'])
            })
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
